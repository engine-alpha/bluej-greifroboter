#BlueJ class context
comment0.target=FIGUR
comment0.text=\n\ Klasse\ FIGUR\ repreasentiert\ eine\ Spielfigur,\ deren\ Grafik\ animiert\ ist.\ \n\ Die\ Animationen\ koennen\ durch\ ein\ animiertes\ GIF,\ durch\ Einzelbilder\ \n\ oder\ durch\ Spritesheets\ erzeugt\ werden.\ \n\ Jede\ Figur\ kann\ mehrere\ Zustaende\ annehmen\:\ Je\ einen\ fuer\ eine\ Animationsfolge.\ \n\ So\ kann\ man\ z.B.\ eine\ andere\ Animationsfolge\ fuer\ 'laufen'\ verwenden\ als\ fuer\ 'springen'\ ...\n\ \n\ @author\ \ \ \ \ \ mike_gans@yahoo.de\n\ \n\ @version\ \ \ \ \ 4.0\ (2018-08-06)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @changelog\ \ \ 4.0\ Umstieg\ auf\ EA\ 4\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Nicht\ vergleichbar\ mit\ alter\ Klasse\ FIGUR\ (kein\ Figuren-Editor\ mehr).\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Vereint\ die\ alten\ Klassen\ FIGUR,\ BILD\ und\ WECHSELBILD.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Kann\ ein\ Bild,\ mehrere\ Bilder,\ Sprite-Sheets\ und\ animierte\ GIFs\ einlesen.\n
comment1.params=zustandName\ gifPfad
comment1.target=FIGUR(java.lang.String,\ java.lang.String)
comment1.text=\n\ Konstruktor\ der\ Klasse\ FIGUR.\ \n\ Es\ wird\ ein\ erster\ Zustand\ angelegt\ mit\ der\ Animation\ des\ GIF.\n\ \n\ @param\ \ \ zustandName\ \ \ \ \ Frei\ waehlbarer\ Name\ des\ Zustands.\ (Wird\ zum\ Umschalten\ verwendet)\n\ @param\ \ \ gifPfad\ \ \ \ \ \ \ \ \ Datei-Pfad\ zu\ einem\ animierten\ GIF.\ (Liegt\ dieses\ direkt\ im\ Projekt-Ordner,\ so\ reicht\ der\ Datei-Name)\n
comment10.params=
comment10.target=int\ nenneEbene()
comment10.text=\n\ Nennt\ die\ Nummer\ der\ Ebene,\ in\ der\ dieses\ Objekt\ derzeit\ gezeichnet\ wird.\ \n\ Durch\ veraendern\ der\ Ebenen-Nummer\ kann\ man\ Objekte\ vor\ /\ hinter\ andere\ stellen.\ \n\ Ebenen\ mit\ groesserer\ Nummer\ verdecken\ Ebenen\ mit\ kleinerer\ Nummer.\n\n\ @return\ \ Ebenen-Nummer\:\ -1\=Hintergrund\ ;\ 0\=Standard\ (ueberdeckt\ Hintergrund)\ ,\ 1\=weiter\ vorne\ (ueberdeckt\ Hintergrund\ und\ Ebene\ 0)\ ;\ ...\n
comment11.params=
comment11.target=java.lang.String\ nenneAktuellenZustand()
comment11.text=\n\ Nennt\ den\ aktuellen\ Zustand.\n\ \n\ @return\ \ \ \ \ \ Der\ Name\ des\ aktuellen\ Zustands.\n
comment12.params=zustandName\ frameDauerInMS
comment12.target=void\ setzeAnimationsGeschwindigkeitVon(java.lang.String,\ int)
comment12.text=\n\ Setzt\ die\ Animationsgeschwindigkeit\ eines\ zustands\ neu.\ \n\n\ @param\ \ \ zustandName\ \ \ \ \ Name\ des\ Zustands,\ dessen\ Animationsgeschwindigkeit\ man\ aendern\ moechte\n\ @param\ \ \ frameDauerInMS\ \ Dauer\ in\ Millisekunden\ fuer\ ein\ Bild\n
comment13.params=x\ y
comment13.target=void\ setzeMittelpunkt(float,\ float)
comment13.text=\n\ Setzt\ den\ Mittelpunkt\ der\ Figur\ neu.\ \n\n\ @param\ \ \ x\ \ \ Die\ x-Koordinate\ des\ neuen\ Mittelpunkts\n\ @param\ \ \ y\ \ \ Die\ y-Koordinate\ des\ neuen\ Mittelpunkts\n
comment14.params=
comment14.target=float\ nenneMx()
comment14.text=\n\ Nennt\ die\ x-Koordinate\ des\ Mittelpunkts.\ \n\n\ @return\ \ \ x-Koordinate\ des\ Mittelpunkts\n
comment15.params=
comment15.target=float\ nenneMy()
comment15.text=\n\ Nennt\ die\ y-Koordinate\ des\ Mittelpunkts.\ \n\n\ @return\ \ \ y-Koordinate\ des\ Mittelpunkts\n
comment16.params=sichtbarNeu
comment16.target=void\ setzeSichtbar(boolean)
comment16.text=\n\ Setzt\ die\ Figur\ sichtbar\ oder\ unsichtbar.\ \n\n\ @param\ \ \ sichtbarNeu\ \ \ \ \ 'true'\ fuer\ sichtbar,\ 'false'\ fuer\ unsichtbar\n
comment17.params=
comment17.target=boolean\ nenneSichtbar()
comment17.text=\n\ Gibt\ an,\ ob\ die\ Figur\ gerade\ sichtbar\ ist.\n\n\ @return\ \ 'true'\ wenn\ sichtbar,\ 'false'\ wenn\ unsichtbar\n
comment18.params=deltaX\ deltaY
comment18.target=void\ verschiebenUm(float,\ float)
comment18.text=\n\ Verschiebt\ diese\ Figur\ um\ eine\ Verschiebung\ -\ angegeben\ durch\ ein\ "Delta\ X"\ und\ "Delta\ Y".\n\ \n\ @param\ \ \ deltaX\ \ Der\ X\ Anteil\ dieser\ Verschiebung.\ Positive\ Werte\ verschieben\ nach\ rechts,\ negative\ nach\ links.\n\ \n\ @param\ \ \ deltaY\ \ Der\ Y\ Anteil\ dieser\ Verschiebung.\ Positive\ Werte\ verschieben\ nach\ unten,\ negative\ nach\ oben.\n
comment19.params=ea
comment19.target=boolean\ beruehrt(ea.edu.EduActor)
comment19.text=\n\ Testet,\ ob\ ein\ anderes\ Grafik-Objekt\ beruehrt\ wird.\n\n\ @param\ \ \ ea\ \ \ Ein\ anderes\ BILD,\ RECHTECK,\ KREIS,\ DREIECK,\ ...\n\ \n\ @return\ \ true,\ wenn\ sich\ die\ beiden\ Objekte\ ueberschneiden\n
comment2.params=zustandName\ spritesheetPfad\ x\ y
comment2.target=FIGUR(java.lang.String,\ java.lang.String,\ int,\ int)
comment2.text=\n\ Konstruktor\ der\ Klasse\ FIGUR.\ \n\ Die\ Sprites\ muessen\ alle\ gleich\ gross\ sein\ \!\!\!\n\ Es\ wird\ ein\ erster\ Zustand\ angelegt\ mit\ der\ Animation\ des\ Spritesheets.\ \n\ Einfache\ Bilder\ koennen\ mit\ x\=1\ und\ y\=1\ geladen\ werden\n\n\ @param\ \ \ zustandName\ \ \ \ \ \ \ \ \ Frei\ waehlbarer\ Name\ des\ Zustands.\ (Wird\ zum\ Umschalten\ verwendet)\n\ @param\ \ \ spritesheetPfad\ \ \ \ \ Datei-Pfad\ zu\ einem\ Spritesheet.\ (Liegt\ dieses\ direkt\ im\ Projekt-Ordner,\ so\ reicht\ der\ Datei-Name)\n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Anzahl\ der\ Sprites\ in\ x-Richtung\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Anzahl\ der\ Sprites\ in\ y-Richtung\n
comment20.params=x\ y
comment20.target=boolean\ beinhaltetPunkt(float,\ float)
comment20.text=\n\ Methode\ beinhaltetPunkt\n\n\ @param\ \ \ x\ \ \ x-Koordinate\ des\ Punkts\ (Pixel)\n\ @param\ \ \ y\ \ \ x-Koordinate\ des\ Punkts\ (Pixel)\n\ @return\ \ \ \ \ \ true,\ wenn\ Punkt\ innerhalb\ der\ Grafik\n
comment21.params=ea
comment21.target=float\ berechneAbstandX(ea.edu.EduActor)
comment21.text=\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Rechtecks\ vom\ Mittelpunkt\ \n\ eines\ anderen\ Grfik-Objekts\ in\ x-Richtung\ entfernt\ ist.\n\ \n\ @param\ \ \ grafikObjekt\ \ \ \ Das\ andere\ Grafik-Objekt\n\ \n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Rechtecks\ vom\ anderen\ Grafik-Objekt\ in\ x-Richtung\ (>0,\ wenn\ dieses\ Rechteck\ rechts\ des\ anderen\ Grafik-Objekts\ liegt)\n
comment22.params=ea
comment22.target=float\ berechneAbstandY(ea.edu.EduActor)
comment22.text=\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Rechtecks\ vom\ Mittelpunkt\ \n\ eines\ anderen\ Grfik-Objekts\ in\ y-Richtung\ entfernt\ ist.\n\ \n\ @param\ \ \ grafikObjekt\ \ \ \ Das\ andere\ Grafik-Objekt\n\ \n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Rechtecks\ vom\ anderen\ Grafik-Objekt\ in\ y-Richtung\ (>0,\ wenn\ dieses\ Rechteck\ unterhalb\ des\ anderen\ Grafik-Objekts\ liegt)\n
comment23.params=winkelAenderung
comment23.target=void\ drehenUm(float)
comment23.text=\n\ Dreht\ die\ Grafik\ um\ einen\ Winkel\n\n\ @param\ \ \ winkelAenderung\ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment24.params=neuerDrehwinkel
comment24.target=void\ setzeDrehwinkel(float)
comment24.text=\n\ Setzt\ den\ Drehwinkel\ auf\ eine\ absoluten\ neuen\ Wert\n\n\ @param\ \ \ neuerDrehwinkel\ \ \ \ \ der\ neue\ Drehwinkel\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment25.params=
comment25.target=float\ nenneDrehwinkel()
comment25.text=\n\ Nennt\ den\ Winkel,\ um\ den\ die\ Grafik\ gedreht\ wurde\n\n\ @return\ \ \ \ \ \ der\ Winkel,\ um\ den\ die\ Grafik\ gedreht\ wurde\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ 0\:\ wenn\ nicht\ gedreht\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ wenn\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ wenn\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment26.params=gespiegelt
comment26.target=void\ spiegelnHorizontal(boolean)
comment26.text=\n\ Spiegelt\ die\ Grafik\ an\ der\ senkrechten\ Achse\n\n\ @param\ \ \ gespiegelt\ \ 'true'\ spiegeln,\ 'false'\ nicht\ spiegeln\n
comment27.params=gespiegelt
comment27.target=void\ spiegelnVertikal(boolean)
comment27.text=\n\ Spiegelt\ die\ Grafik\ an\ der\ waagerechten\ Achse\n\n\ @param\ \ \ gespiegelt\ \ 'true'\ spiegeln,\ 'false'\ nicht\ spiegeln\n
comment3.params=zustandName\ verzeichnisPfad\ praefix
comment3.target=FIGUR(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.text=\n\ Konstruktor\ der\ Klasse\ FIGUR.\ \n\ Laedt\ dazu\ alle\ Bilder\ in\ einem\ Verzeichnis\ ein,\ die\ zu\ einem\ bestimmten\ Praefix\ passen.\n\ Es\ wird\ ein\ erster\ Zustand\ angelegt\ mit\ der\ Animation\ der\ Bilder-Folge.\n\ \n\ @param\ zustandName\ \ \ \ \ \ \ Name\ f\u00FCr\ den\ ersten\ Zustand.\n\ @param\ verzeichnisPfad\ \ \ Pfad\ zum\ Verzeichnis,\ in\ dem\ alle\ einzuladenden\ Bilder\ liegen.\n\ @param\ praefix\ \ \ \ \ \ \ \ \ \ \ Das\ Praefix,\ das\ alle\ einzuladenden\ Bilder\ haben\ m\u00FCssen.\n
comment4.params=ebenenNummer
comment4.target=void\ setzeEbene(int)
comment4.text=\n\ Legt\ die\ Ebene\ fest,\ in\ der\ das\ Objekt\ gezeichnet\ wird.\ \n\ Ebenen\ mit\ grossen\ Nummern\ ueberdecken\ Ebenen\ mit\ kleineren\ Nummern.\ \n\ Der\ Hintergrund\ ist\ -1.\ Jedes\ Objekt\ wird\ zunaechst\ in\ Ebene\ 0\ erzeugt.\ \n\n\ @param\ \ \ ebenenNummer\ \ \ \ -1\=Hintergrund\ ;\ 0\=Standard\ (ueberdeckt\ Hintergrund)\ ;\ 1\=weiter\ vorne\ (ueberdeckt\ Hintergrund\ und\ Ebene\ 0)\ ;\ ...\n
comment5.params=zustandsName\ bildpfad
comment5.target=void\ zustandHinzufuegenVonGIF(java.lang.String,\ java.lang.String)
comment5.text=\n\ Fuegt\ einen\ neuen\ Zustand\ mit\ GIF-Animation\ ein.\ \n\ \n\ @param\ \ \ zustandsName\ \ \ \ Frei\ waehlbarer\ Name\ des\ Zustands.\ (Wird\ zum\ Umschalten\ verwendet)\n\ @param\ \ \ bildpfad\ \ \ \ \ \ \ \ Pfad\ zum\ animierten\ GIF\ fuer\ diesen\ Zustand.\n
comment6.params=zustandsName\ bildpfad\ anzahlX\ anzahlY
comment6.target=void\ zustandHinzufuegenVonSpritesheet(java.lang.String,\ java.lang.String,\ int,\ int)
comment6.text=\n\ Fuegt\ einen\ neuen\ Zustand\ mit\ Spritesheet-Animation\ ein.\ \n\ Das\ Spritesheet\ muss\ <b>aus\ Kacheln\ gleicher\ Gr\u00F6\u00DFe</b>\ bestehen.\n\ "leere"\ Kacheln\ werden\ als\ leere\ Animationsframes\ mit\ einbezogen.\n\ \n\ @param\ \ \ zustandsName\ \ Frei\ waehlbarer\ Name\ des\ Zustands.\ (Wird\ zum\ Umschalten\ verwendet)\n\ @param\ \ \ bildpfad\ \ \ \ \ \ Pfad\ zum\ Spritesheet.\ (Liegt\ diese\ im\ Projekt-Ordner,\ so\ reicht\ der\ Datei-Name)\n\ @param\ \ \ anzahlX\ \ \ \ \ \ \ Anzahl\ der\ Spritesheet-Kacheln\ in\ die\ X-Richtung.\n\ @param\ \ \ anzahlY\ \ \ \ \ \ \ Anzahl\ der\ Spritesheet-Kacheln\ in\ die\ Y-Richtung.\n
comment7.params=zustandsName\ bildpfade
comment7.target=void\ zustandHinzufuegenVonBildern(java.lang.String,\ java.lang.String[])
comment7.text=\n\ Fuegt\ einen\ neuen\ Zustand\ durch\ einzelne\ Bilder\ ein.\ \n\ Die\ Bilder\ werden\ automatisch\ der\ Reihe\ nach\ durchgewechselt.\n\ \n\ @param\ \ \ zustandsName\ \ \ \ Frei\ waehlbarer\ Name\ des\ Zustands.\ (Wird\ zum\ Umschalten\ verwendet)\n\ @param\ \ \ bildpfade\ \ \ \ \ \ \ Die\ Pfade\ der\ einzelnen\ Bilder\ in\ korrekter\ Reihenfolge.\n
comment8.params=zustandsName
comment8.target=void\ setzeZustand(java.lang.String)
comment8.text=\n\ Setzt\ den\ Zustand\ der\ Figur\ neu.\ \n\ In\ jedem\ Fall\ wird\ dabei\ der\ Animationsloop\ zurueckgesetzt.\n\ \n\ @param\ \ \ zustandsName\ \ \ \ Der\ Name\ des\ zu\ setzenden\ Zustands.\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Unter\ diesem\ Namen\ muss\ ein\ Zustand\ in\ dieser\ Figur\ existieren.\n
comment9.params=zustandVon\ zustandNach
comment9.target=void\ automatischenUebergangSetzen(java.lang.String,\ java.lang.String)
comment9.text=\n\ Setzt\ einen\ automatischen\ Uebergang\ von\ einem\ Zustand\ zu\ einem\ anderen.\ \n\ Wird\ der\ erste\ Zustand\ aufgerufen,\ so\ wird\ erst\ <b>EIN\ MAL</b>\ die\ Animation\ dieses\ ersten\ Zustands\ \n\ aufgerufen\ und\ automatisch\ <b>anschliessend\ wiederholt</b>\ die\ Animation\ des\ zweiten\ Zustands.\n\ \n\ @param\ \ \ zustandVon\ \ \ \ \ \ Der\ erste\ Zustand.\n\ @param\ \ \ zustandNach\ \ \ \ \ Der\ zweite\ Zustand,\ zu\ dem\ die\ Figur\ automatisch\ uebergehen\ soll,\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ nachdem\ die\ animation\ des\ ersten\ Zustands\ einmal\ bis\ zum\ Ende\ durchgelaufen\ ist.\n
numComments=28
