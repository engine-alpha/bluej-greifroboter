#BlueJ class context
comment0.target=DREIECK
comment0.text=\n\ Diese\ Klasse\ stellt\ ein\ einfaches\ Dreieck\ dar.\n
comment1.params=
comment1.target=DREIECK()
comment1.text=\n\ Konstruktor\ der\ Klasse\ <code>DREIECK</code>.\ Erstellt\ ein\ neues\ Standard-Dreieck.\n
comment10.params=x\ y
comment10.target=boolean\ beinhaltetPunkt(float,\ float)
comment10.text=\n\ Methode\ beinhaltetPunkt\n\n\ @param\ \ \ x\ \ \ x-Koordinate\ des\ Punkts\ (Pixel)\n\ @param\ \ \ y\ \ \ x-Koordinate\ des\ Punkts\ (Pixel)\n\ @return\ \ \ \ \ \ true,\ wenn\ Punkt\ innerhalb\ der\ Grafik\n
comment11.params=
comment11.target=int\ nenneEbene()
comment11.text=\n\ Nennt\ die\ Nummer\ der\ Ebene,\ in\ der\ dieses\ Objekt\ derzeit\ gezeichnet\ wird.\ \n\ Durch\ veraendern\ der\ Ebenen-Nummer\ kann\ man\ Objekte\ vor\ /\ hinter\ andere\ stellen.\ \n\ Ebenen\ mit\ groesserer\ Nummer\ verdecken\ Ebenen\ mit\ kleinerer\ Nummer.\n\n\ @return\ \ Ebenen-Nummer\:\ -1\=Hintergrund\ ;\ 0\=Standard\ (ueberdeckt\ Hintergrund)\ ,\ 1\=weiter\ vorne\ (ueberdeckt\ Hintergrund\ und\ Ebene\ 0)\ ;\ ...\n
comment12.params=
comment12.target=float\ nenneMx()
comment12.text=\n\ Diese\ Methode\ gibt\ die\ x-Koordinate\ des\ Mittelpunkts\ dieses\ Dreiecks\ zurueck.\n\ \n\ @return\ \ Die\ aktuelle\ x-Koordinate\ des\ Mittelpunktes\ dieses\ Dreiecks\n
comment13.params=
comment13.target=float\ nenneMy()
comment13.text=\n\ Diese\ Methode\ gibt\ die\ y-Koordinate\ des\ Mittelpunkts\ dieses\ Kreises\ zurueck.\n\ \n\ @return\ \ Die\ aktuelle\ y-Koordinate\ des\ Mittelpunktes\ dieses\ Kreises\n
comment14.params=
comment14.target=java.lang.String\ nenneFarbe()
comment14.text=\n\ Diese\ Methode\ gibt\ die\ Farbe\ dieses\ Dreiecks\ zurueck.\n\ \n\ @return\ \ Die\ aktuelle\ Farbe\ dieses\ Dreiecks\n
comment15.params=
comment15.target=boolean\ nenneSichtbar()
comment15.text=\n\ Diese\ Methode\ gibt\ die\ Sichtbarkeit\ dieses\ Dreiecks\ zurueck.\n\ \n\ @return\ \ Die\ aktuelle\ Sichtbarkeit\ dieses\ Dreiecks\n
comment16.params=ea
comment16.target=float\ berechneAbstandX(ea.edu.EduActor)
comment16.text=\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Rechtecks\ vom\ Mittelpunkt\ \n\ eines\ anderen\ Grfik-Objekts\ in\ x-Richtung\ entfernt\ ist.\n\ \n\ @param\ \ \ grafikObjekt\ \ \ \ Das\ andere\ Grafik-Objekt\n\ \n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Rechtecks\ vom\ anderen\ Grafik-Objekt\ in\ x-Richtung\ (>0,\ wenn\ dieses\ Rechteck\ rechts\ des\ anderen\ Grafik-Objekts\ liegt)\n
comment17.params=ea
comment17.target=float\ berechneAbstandY(ea.edu.EduActor)
comment17.text=\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Dreiecks\ vom\ Mittelpunkt\ \n\ eines\ anderen\ Grfik-Objekts\ in\ y-Richtung\ entfernt\ ist.\n\ \n\ @param\ \ \ grafikObjekt\ \ \ \ Das\ andere\ Grafik-Objekt\n\ \n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Dreiecks\ vom\ anderen\ Grafik-Objekt\ in\ y-Richtung\ (>0,\ wenn\ dieses\ Dreieck\ unterhalb\ des\ anderen\ Grafik-Objekts\ liegt)\n
comment18.params=winkelAenderung
comment18.target=void\ drehenUm(float)
comment18.text=\n\ Dreht\ die\ Grafik\ um\ einen\ Winkel\n\n\ @param\ \ \ winkelAenderung\ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment19.params=neuerDrehwinkel
comment19.target=void\ setzeDrehwinkel(float)
comment19.text=\n\ Setzt\ den\ Drehwinkel\ auf\ eine\ absoluten\ neuen\ Wert\n\n\ @param\ \ \ neuerDrehwinkel\ \ \ \ \ der\ neue\ Drehwinkel\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment2.params=Ax\ Ay\ Bx\ By\ Cx\ Cy
comment2.target=DREIECK(float,\ float,\ float,\ float,\ float,\ float)
comment2.text=\n\ Konstruktor\ der\ Klasse\ <code>DREIECK</code>.\ Erstellt\ ein\ neues\ Dreieck\ mit\ gegebenen\ Eck-Koordinaten.\ \n\ Die\ Reihenfolge\ der\ Ecken\ ist\ egal.\ \n\n\ @param\ \ \ Ax\ \ Die\ x-Koordinate\ der\ ersten\ Ecke\n\ @param\ \ \ Ay\ \ Die\ y-Koordinate\ der\ ersten\ Ecke\n\ @param\ \ \ Bx\ \ Die\ x-Koordinate\ der\ zweiten\ Ecke\n\ @param\ \ \ By\ \ Die\ y-Koordinate\ der\ zeiten\ Ecke\n\ @param\ \ \ Cx\ \ Die\ x-Koordinate\ der\ dritten\ Ecke\n\ @param\ \ \ Cy\ \ Die\ y-Koordinate\ der\ dritten\ Ecke\n
comment20.params=
comment20.target=float\ nenneDrehwinkel()
comment20.text=\n\ Nennt\ den\ Winkel,\ um\ den\ die\ Grafik\ gedreht\ wurde\n\n\ @return\ \ \ \ \ \ der\ Winkel,\ um\ den\ die\ Grafik\ gedreht\ wurde\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ 0\:\ wenn\ nicht\ gedreht\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ wenn\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ wenn\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment21.params=
comment21.target=ea.actor.Actor\ getActor()
comment3.params=ebenenNummer
comment3.target=void\ setzeEbene(int)
comment3.text=\n\ Legt\ die\ Ebene\ fest,\ in\ der\ das\ Objekt\ gezeichnet\ wird.\ \n\ Ebenen\ mit\ grossen\ Nummern\ ueberdecken\ Ebenen\ mit\ kleineren\ Nummern.\ \n\ Der\ Hintergrund\ ist\ -1.\ Jedes\ Objekt\ wird\ zunaechst\ in\ Ebene\ 0\ erzeugt.\ \n\n\ @param\ \ \ ebenenNummer\ \ \ \ -1\=Hintergrund\ ;\ 0\=Standard\ (ueberdeckt\ Hintergrund)\ ;\ 1\=weiter\ vorne\ (ueberdeckt\ Hintergrund\ und\ Ebene\ 0)\ ;\ ...\n
comment4.params=Ax\ Ay\ Bx\ By\ Cx\ Cy
comment4.target=void\ setzeEcken(float,\ float,\ float,\ float,\ float,\ float)
comment4.text=\n\ Setzt\ die\ Ecken\ dieses\ Dreiecks\ (A,\ B,\ C)\ neu.\n\ \n\ @param\ \ \ Ax\ \ Die\ X-Koordinate\ des\ Punktes\ A\n\ @param\ \ \ Ay\ \ Die\ Y-Koordinate\ des\ Punktes\ A\n\ @param\ \ \ Bx\ \ Die\ X-Koordinate\ des\ Punktes\ B\n\ @param\ \ \ By\ \ Die\ Y-Koordinate\ des\ Punktes\ B\n\ @param\ \ \ Cx\ \ Die\ X-Koordinate\ des\ Punktes\ C\n\ @param\ \ \ Cy\ \ Die\ Y-Koordinate\ des\ Punktes\ C\n
comment5.params=farbeNeu
comment5.target=void\ setzeFarbe(java.lang.String)
comment5.text=\n\ Setzt\ die\ Farbe\ dieses\ Dreiecks\ neu.\n\ \n\ @param\ \ \ farbeNeu\ \ \ \ Diese\ Farbe\ erhaelt\ das\ Dreieck\ (z.B.\ "Rot")\n
comment6.params=x\ y
comment6.target=void\ setzeMittelpunkt(float,\ float)
comment6.text=\n\ Setzt\ den\ Mittelpunkt\ dieses\ Dreieck\ neu.<br\ />\n\ <b>ACHTUNG\!</b><br\ />\n\ Dies\ ist\ <i>nicht</i>\ der\ geometrische\ Mittelpunkt.\ Denkt\ man\ sich\ ein\ Rechteck,\ \n\ das\ man\ "genau\ ueber\ das\ Dreieck"\ spannt,\ sodass\ es\ dieses\ gerade\ von\ allen\ Seiten\ umschliesst,\ \n\ so\ ist\ der\ Mittelpunkt\ <b>dieses\ Rechtecks</b>\ der,\ der\ hier\ neu\ gesetzt\ wird.\n\ \n\ @param\ \ \ x\ Die\ X-Koordinate\ des\ neuen\ Mittelpunktes\n\ \n\ @param\ \ \ y\ Die\ Y-Koordinate\ des\ neuen\ Mittelpunktes\n
comment7.params=sichtbarNeu
comment7.target=void\ setzeSichtbar(boolean)
comment7.text=\n\ Setzt,\ ob\ dieses\ Dreieck\ sichtbar\ sein\ soll.\n\ \n\ @param\ \ \ sichtbarNeu\ Ist\ dieser\ Wert\ <code>true</code>,\ ist\ nach\ dem\ Aufruf\ dieser\ Methode\ \n\ \ \ \ \ \ \ \ \ \ dieses\ Dreieck\ sichtbar.\ Ist\ dieser\ Wert\ <code>false</code>,\ so\ ist\ nach\ dem\ Aufruf\ \n\ \ \ \ \ \ \ \ \ \ dieser\ Methode\ dieses\ Dreieck\ unsichtbar.\n
comment8.params=deltaX\ deltaY
comment8.target=void\ verschiebenUm(float,\ float)
comment8.text=\n\ Verschiebt\ dieses\ Dreieck\ um\ eine\ Verschiebung\ -\ angegeben\ durch\ ein\ "Delta\ X"\ und\ "Delta\ Y".\n\ \n\ @param\ \ \ deltaX\ \ Der\ X\ Anteil\ dieser\ Verschiebung.\ Positive\ Werte\ verschieben\ nach\ rechts,\ negative\ nach\ links.\n\ \n\ @param\ \ \ deltaY\ \ Der\ Y\ Anteil\ dieser\ Verschiebung.\ Positive\ Werte\ verschieben\ nach\ unten,\ negative\ nach\ oben.\n
comment9.params=ea
comment9.target=boolean\ beruehrt(ea.edu.EduActor)
comment9.text=\n\ Testet,\ ob\ ein\ anderes\ Grafik-Objekt\ beruehrt\ wird.\n\n\ @param\ \ \ r\ \ \ Ein\ anderes\ BILD,\ RECHTECK,\ KREIS,\ DREIECK,\ ...\n\ \n\ @return\ \ true,\ wenn\ sich\ die\ beiden\ Objekte\ ueberschneiden\n
numComments=22
