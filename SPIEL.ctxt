#BlueJ class context
comment0.target=SPIEL
comment0.text=\n\ Die\ Klasse\ SPIEL\ ist\ ein\ Template,\ das\ so\ wie\ es\ ist\ an\ Schueler\ ausgegeben\ werden\ kann.\n\ (Einzige\ Voraussetzung\ ist,\ dass\ die\ engine-alpha-Bibliothek\ im\ Suchpfad\ erreichbar\ ist.)\n\ Es\ startet\ alles\ Notwendige\ fuer\ ein\ Spiel.\n\ \n\ Beim\ Konstruktor\ ohne\ Parameter\ gibt\ es\ keine\ Maus-Interaktion.\n\ Die\ Methoden\ tick()\ und\ tasteReagieren()\ werden\ immer\ automatisch\ aufgerufen.\n\ \n\ Beim\ Konstruktor\ mit\ Parameter\ kann\ Maus-Interaktion\ eingeschaltet\ werden.\n\ \n\ \n\ @author\ \ \ \ \ \ Michael\ Andonie\ und\ Mike\ Ganshorn\ \ (nach\ Idee\ von\ Bendikt\ Lindemann)\n\ \n\ \n\ @version\ \ \ \ \ 4.0\ (2018-08-06)\n\ \n\ \n\ @changelog\ \ \ 4.0\ Umstieg\ auf\ EA\ 4\n\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ 2.3\ Ticker\ startet\ NICHT\ mehr\ automatisch\ \!\!\!\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Methoden-Signaturen\ "geglaettet"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ neue\ Konstruktoren\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Methode\ tasteGedrueckt(\ int\ taste\ )\n\ \n
comment1.params=
comment1.target=SPIEL()
comment1.text=\n\ Erstellt\ ein\ einfaches\ Spiel\:\ Breite\ 800\ ,\ Hoehe\ 600\ ,\ ohne\ Punktestand\ und\ Maus.\ <br\ />\ \n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick()\ bzw.\ tasteReagieren(int\ taste).\n
comment10.params=x\ y
comment10.target=void\ klickReagieren(int,\ int)
comment10.text=\n\ Wird\ bei\ jedem\ Mausklick\ (Linksklick)\ automatisch\ aufgerufen.\n\ \n\ @param\ \ \ x\ \ \ Die\ X-Koordinate\ des\ Klicks\n\ \n\ @param\ \ \ y\ \ \ Die\ Y-Koordinate\ des\ Klicks\n
comment11.params=taste
comment11.target=void\ tasteReagieren(int)
comment11.text=\n\ Wird\ bei\ jedem\ Tastendruck\ automatisch\ aufgerufen\ und\ automatisch\ das\ Kuerzel\ der\ entsprechenden\ Taste\ mitgegeben.\n\ \n\ @param\ \ \ taste\ \ \ ganzzahliges\ Kuerzel\ der\ Taste\ (Farben_Tastencode.pdf)\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ oder\ ENUM-Typ\ aus\ Klasse\ TASTE\ (darin\ die\ Klassen-Doku\ lesen)\n
comment12.params=von\ bis
comment12.target=int\ zufallszahlVonBis(int,\ int)
comment12.text=\n\ Gibt\ eine\ Zufallszahl\ aus.\n\ \n\ @param\ von\ \ \ Die\ Untergrenze\ der\ Zufallszahl\ (INKLUSIVE)\n\ \n\ @param\ bis\ \ \ Die\ Obergrenze\ der\ Zufallszahl\ (INKLUSIVE)\n\ \n\ @return\ \ \ \ \ \ Eine\ Zufallszahl\ z\ mit\:\ \ \ von\ <\=\ z\ <\=\ bis\n
comment13.params=ms
comment13.target=void\ warte(int)
comment13.text=\n\ Wartet\ um\ die\ Angegebene\ Anzahl\ an\ Millisekunden\ <b>BLOCKIEREND</b>\ bis\ zur\ Ausfuehrung\ des\ naechsten\ Befehls.\ \n\ <b>\!\!\!\ VORSICHT\ \!\!\!</b>\ Innerhlab\ der\ Methode\ tick()\ <b>NICHT</b>\ \ verwenden\ \!\!\!\ \n\ (ausser\ es\ ist\ sicher\ gestellt,\ dass\ die\ Summe\ aller\ 'warte-Millisekunden'\ <b>KUERZER</b>\ ist\ als\ ein\ Tick-Intervall)\n\n\ @param\ \ \ ms\ \ \ \ \ \ Die\ zu\ wartende\ Zeit\ in\ Millisekunden\n
comment14.params=taste
comment14.target=boolean\ tasteGedrueckt(int)
comment14.text=\n\ Ueberprueft,\ ob\ eine\ Taste\ gerade\ gedrueckt\ gehalten\ wird.\n\ \n\ @param\ \ \ taste\ \ \ Der\ ganzzahlige\ Wert,\ der\ fuer\ die\ gedrueckte\ Taste\ steht.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Details\ koennen\ in\ der\ <i>Tabelle\ aller\ Tastaturkuerzel</i>\ abgelesen\ werden.\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Oder\ man\ verwendet\ die\ ENUM-Typen\ der\ Klasse\ TASTE\ (Klassen-Doku\ lesen).\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ \ true,\ falls\ die\ Taste\ gedrueckt\ gehalten\ wird.\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n
comment15.params=dX\ dY
comment15.target=void\ verschiebeKamera(float,\ float)
comment15.text=\n\ Verschiebt\ die\ Kamera\ um\ ein\ Stueck.\ \n\n\ @param\ \ \ dX\ \ \ \ \ \ Anzahl\ Pixel\ in\ x-Richtung\n\ @param\ \ \ dY\ \ \ \ \ \ Anzahl\ Pixel\ in\ y-Richtung\n
comment16.params=zoom
comment16.target=void\ setzeKameraZoom(float)
comment16.text=\n\ Setzt\ den\ Zoom-Faktor\ der\ Kamera.\ 1.0\ ist\ normal.\ \n\n\ @param\ \ \ zoom\ \ \ \ Zoom-Faktor\:\ >1\ vergroessert\ ;\ <1\ (aber\ >0)\ verkleinert\n
comment17.params=
comment17.target=float\ nenneKameraZoom()
comment17.text=\n\ Nennt\ den\ aktuellen\ Zoom-Wert\ der\ Kamera.\ \n\n\ @return\ \ aktueller\ Zoom-Wert\ der\ Kamera\:\ >1\ vergroessert\ ;\ <1\ (aber\ >0)\ verkleinert\n
comment18.params=focus
comment18.target=void\ setzeKameraFokus(ea.actor.Actor)
comment18.text=\n\ Setze\ den\ Kamera-Fokus\ auf\ ein\ bestimmtes\ Objekt.\ \n\n\ @param\ \ \ focus\ \ \ Das\ neue\ Objekt\ im\ Zentrum\ der\ Kamera\n
comment19.params=winkelInGrad
comment19.target=void\ rotiereKamera(float)
comment19.text=\n\ Rotiert\ die\ Kamera\ im\ oder\ gegen\ den\ Uhrzeigersinn.\ \n\n\ @param\ \ \ winkelInGrad\ \ \ \ Winkel,\ um\ den\ gedreht\ werden\ soll.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ >0\ im\ Uhrzeigersinn\ ;\ <0\ gegen\ den\ Uhrzeigersinn\n
comment2.params=fensterBreite\ fensterHoehe\ maus
comment2.target=SPIEL(int,\ int,\ boolean)
comment2.text=\n\ SPIEL\ Konstruktor\ mit\ allen\ Moeglichkeiten\ <br\ />\ \n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick()\ bzw.\ tasteReagieren(int\ taste).\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @param\ \ \ fensterBreite\ \ \ in\ Pixel\n\ @param\ \ \ fensterHoehe\ \ \ \ in\ Pixel\n\ @param\ \ \ maus\ \ \ \ \ \ \ \ \ \ \ \ true\ \ \:\ man\ sieht\ den\ Mauszeiger\ \ (Klick-Spiel)\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ \:\ man\ sieht\ ihn\ nicht\ \ \ \ \ \ \ (reines\ Tastatur-Spiel)\n
comment20.params=winkelInGrad
comment20.target=void\ setzeKameraRotation(float)
comment20.text=\n\ Setzt\ den\ Rotationswinkel\ der\ Kamera\ auf\ einen\ bestimmten\ Wert.\ \n\n\ @param\ \ \ winkelInGrad\ \ \ \ Der\ neue\ Kamera-Winkel\ in\ Grad\n
comment21.params=anzeigen
comment21.target=void\ zeigeKoordinatensystem(boolean)
comment21.text=\n\ Methode\ zeigeKoordinatensystem\n\n\ @param\ anzeigen\ Ein\ Parameter\n
comment22.params=nachricht
comment22.target=void\ nachricht(java.lang.String)
comment22.text=\n\ Gibt\ ein\ <b>blockierendes</b>\ Nachricht-Fenster\ aus.\n\n\ @param\ \ \ nachricht\ \ \ angezeigte\ Nachricht\ in\ dem\ Fenster\n
comment23.params=frage
comment23.target=boolean\ frageJaNein(java.lang.String)
comment23.text=\n\ Gibt\ ein\ <b>blockierendes</b>\ Frage-Fenster\ aus.\n\n\ @param\ \ \ frage\ \ \ angezeigte\ Frage\ in\ dem\ Fenster\n\ @return\ \ 'true'\ \=\ Ja\ ,\ 'false'\ \=\ Nein\n
comment24.params=frage
comment24.target=boolean\ nachrichtOkAbbrechen(java.lang.String)
comment24.text=\n\ Gibt\ ein\ <b>blockierendes</b>\ Frage-Fenster\ aus.\n\n\ @param\ \ \ frage\ \ \ angezeigte\ Frage\ in\ dem\ Fenster\n\ @return\ \ 'true'\ \=\ Ok\ ,\ 'false'\ \=\ Abbrechen\n
comment25.params=nachricht
comment25.target=java.lang.String\ eingabe(java.lang.String)
comment25.text=\n\ Gibt\ ein\ <b>blockierendes</b>\ Eingabe-Fenster\ aus.\n\n\ @param\ \ \ angezeigte\ Nachricht\ in\ dem\ Fenster\n\ @return\ \ Benutzer-Eingabe\n
comment26.params=meterProQuadratsekunde
comment26.target=void\ setzeSchwerkraft(float)
comment26.text=\n\ Setzt\ die\ Intensitaet\ der\ Schwerkraft\ (normal\=9.8).\ \n\n\ @param\ \ \ meterProQuadratsekunde\ \ \ \ \ \ Wert\ fuer\ die\ gewuenschte\ Fallbeschleunigung\n
comment27.params=ppm
comment27.target=void\ setzePixelProMeter(int)
comment27.text=\n\ Hiermit\ kann\ die\ Skalierung\ des\ Bildschirms\ eingestellt\ werden\ z.B.\ fuer\ physikalische\ Simulationen.\ \n\ Standard-Wert\ ist\ 30.\n\n\ @param\ \ \ ppm\ \ \ \ \ Anzahl\ der\ Pixel\ am\ Monitor,\ die\ in\ Wirklichkeit\ einem\ Meter\ entspechen.\ (Standard\=30)\n
comment3.params=maus
comment3.target=SPIEL(boolean)
comment3.text=\n\ SPIEL\ Konstruktor\ 800\ x\ 600\n\n\ @param\ \ \ maus\ \ \ \ \ \ \ \ 'true'\ mit\ Maus\ ,\ 'false'\ ohne\ Maus\n
comment4.params=x\ y
comment4.target=SPIEL(int,\ int)
comment4.text=\n\ SPIEL\ Konstruktor\ ohne\ Maus.\n\n\ @param\ \ \ x\ \ \ Ein\ Parameter\n\ @param\ \ \ y\ \ \ Ein\ Parameter\n
comment5.params=pfad
comment5.target=void\ setzeHintergrundgrafik(java.lang.String)
comment5.text=\n\ Setzt\ eine\ Hintergrundgrafik\ fuer\ das\ Spiel.\ Dieses\ Bild\ liegt\ immer\ hinter\ allen\ anderen\ Objekten.\ \n\ \n\ @param\ \ \ pfad\ \ \ \ Der\ Pfad\ der\ Bilddatei\ (jpg,\ bmp,\ png)\ des\ Bildes,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ das\ benutzt\ werden\ soll.\ ZB\:\ "hintergrund.jpg"\n
comment6.params=ms
comment6.target=void\ tickerIntervallSetzen(int)
comment6.text=\n\ Setzt\ das\ Ticker-Intervall.\n\ \n\ @param\ \ \ ms\ \ Die\ Zeit\ in\ Millisekunden\ zwischen\ zwei\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Aufrufen\ der\ <code>tick()</code>-Methode.\n
comment7.params=
comment7.target=void\ tickerStoppen()
comment7.text=\n\ Stoppt\ die\ Ticker-Funktion.\ Die\ <code>tick()</code>-Methode\n\ wird\ nicht\ weiter\ aufgerufen.\ Der\ automatische\ Aufruf\ der\ \n\ <code>tick()</code>-Methode\ kann\ durch\ die\ Methode\ \n\ <code>tickerNeuStarten(int\ ms)</code>\ wiedergestartet\ werden.\n\ \n\ @see\ \ \ \ \ \#tickerNeuStarten(int)\n
comment8.params=ms
comment8.target=void\ tickerNeuStarten(int)
comment8.text=\n\ Startet\ den\ Ticker\ neu.\n\ \n\ @param\ \ \ ms\ \ \ \ \ \ Die\ Zeit\ in\ Millisekunden\ zwischen\ zwei\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Aufrufen\ der\ <code>tick()</code>-Methode.\ \n
comment9.params=
comment9.target=void\ tick()
comment9.text=\n\ Wird\ regelmaessig\ automatisch\ aufgerufen.\ So\ kommt\ Bewegung\ ins\ Spiel\!\ \n\ Tick-Intervall\ kann\ angepasst\ werden.\ Ticker\ muss\ erst\ gestartet\ werden.\n
numComments=28
